{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a simple RESTful CRM Service API written in Go using fiber web framework, PostgreSQL database",
        "title": "CRM API",
        "contact": {
            "name": "Roihan Sori",
            "email": "roihansori12@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/attendance/reports": {
            "get": {
                "description": "Get attendance reports within a time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Attendance Reports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start time (RFC3339 format)",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time (RFC3339 format)",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance reports",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.AttendanceReportResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/attendances": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List Attendances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendances"
                ],
                "summary": "List Attendances",
                "responses": {
                    "200": {
                        "description": "Attendances retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.AttendanceResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create a new Attendance with employee_id, location_id, absent_in, and absent_out",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendances"
                ],
                "summary": "Create a new Attendance",
                "parameters": [
                    {
                        "type": "string",
                        "example": "2024-07-11T08:00:00Z",
                        "name": "absent_in",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2024-07-11T17:00:00Z",
                        "name": "absent_out",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Admin",
                        "name": "created_by",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "employee_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "location_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance created",
                        "schema": {
                            "$ref": "#/definitions/handler.AttendanceResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/attendances/{attendanceId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get an Attendance by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendances"
                ],
                "summary": "Get an Attendance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attendance ID",
                        "name": "attendanceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance retrieved",
                        "schema": {
                            "$ref": "#/definitions/handler.AttendanceResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update an Attendance with employee_id, location_id, absent_in, and absent_out",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendances"
                ],
                "summary": "Update an Attendance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attendance ID",
                        "name": "attendanceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2024-07-11T08:00:00Z",
                        "name": "absent_in",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "2024-07-11T17:00:00Z",
                        "name": "absent_out",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "employee_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "location_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Admin",
                        "name": "updated_by",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance updated",
                        "schema": {
                            "$ref": "#/definitions/handler.AttendanceResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "delete an Attendance by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendances"
                ],
                "summary": "Delete an Attendance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Attendance ID",
                        "name": "attendanceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/departments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "List departments",
                "responses": {
                    "200": {
                        "description": "Departments retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.DepartmentResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create a new department with title and description",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Create a new department",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Admin",
                        "name": "created_by",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Finance",
                        "name": "department_name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department created",
                        "schema": {
                            "$ref": "#/definitions/handler.DepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/departments/{departmentId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get a department by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Get a department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department retrieved",
                        "schema": {
                            "$ref": "#/definitions/handler.DepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update a department with title and description",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Update a department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Finance",
                        "name": "department_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Admin",
                        "name": "updated_by",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department updated",
                        "schema": {
                            "$ref": "#/definitions/handler.DepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "delete a department by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Delete a department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "departmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a profile employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Get an employee",
                "responses": {
                    "200": {
                        "description": "Profile Employee displayed",
                        "schema": {
                            "$ref": "#/definitions/handler.EmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an employee's username, email, password, age",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Update an employee",
                "parameters": [
                    {
                        "description": "Update employee request",
                        "name": "updateEmployeeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee updated",
                        "schema": {
                            "$ref": "#/definitions/handler.EmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Delete an employee",
                "responses": {
                    "200": {
                        "description": "Employee deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employees/login": {
            "post": {
                "description": "Logs in a registered employee and returns an access token if the credentials are valid.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Login and get an access token",
                "parameters": [
                    {
                        "description": "Login request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfully logged in",
                        "schema": {
                            "$ref": "#/definitions/handler.authResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employees/register": {
            "post": {
                "description": "create a new employee account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Register a new employee",
                "parameters": [
                    {
                        "description": "Register request",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee created",
                        "schema": {
                            "$ref": "#/definitions/handler.EmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Data conflict error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List Locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "List Locations",
                "responses": {
                    "200": {
                        "description": "Locations retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.LocationResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create a new Location with title and description",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new Location",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Admin",
                        "name": "created_by",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Finance",
                        "name": "location_name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location created",
                        "schema": {
                            "$ref": "#/definitions/handler.LocationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/locations/{locationId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get a Location by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get a Location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location retrieved",
                        "schema": {
                            "$ref": "#/definitions/handler.LocationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update a Location with title and description",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Update a Location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Finance",
                        "name": "location_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Admin",
                        "name": "updated_by",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location updated",
                        "schema": {
                            "$ref": "#/definitions/handler.LocationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "delete a Location by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a Location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "locationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/positions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List Positions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Positions"
                ],
                "summary": "List Positions",
                "responses": {
                    "200": {
                        "description": "Positions retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.PositionResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create a new Position with title and description",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Positions"
                ],
                "summary": "Create a new Position",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Admin",
                        "name": "created_by",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "1",
                        "name": "department_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Finance",
                        "name": "position_name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position created",
                        "schema": {
                            "$ref": "#/definitions/handler.PositionResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/positions/{positionId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get a Position by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Positions"
                ],
                "summary": "Get a Position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "positionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position retrieved",
                        "schema": {
                            "$ref": "#/definitions/handler.PositionResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update a Position with title and description",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Positions"
                ],
                "summary": "Update a Position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "positionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "1",
                        "name": "department_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Finance",
                        "name": "position_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "Admin",
                        "name": "updated_by",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position updated",
                        "schema": {
                            "$ref": "#/definitions/handler.PositionResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "delete a Position by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Positions"
                ],
                "summary": "Delete a Position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "positionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.Response"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.AttendanceReportResponse": {
            "type": "object",
            "properties": {
                "absent_in": {
                    "type": "string"
                },
                "absent_out": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "department_name": {
                    "type": "string"
                },
                "employee_code": {
                    "type": "string"
                },
                "employee_name": {
                    "type": "string"
                },
                "location_name": {
                    "type": "string"
                },
                "position_name": {
                    "type": "string"
                }
            }
        },
        "handler.AttendanceResponse": {
            "type": "object",
            "properties": {
                "absent_in": {
                    "type": "string"
                },
                "absent_out": {
                    "type": "string"
                },
                "attendance_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "location_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handler.DepartmentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "department_id": {
                    "type": "integer"
                },
                "department_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "handler.EmployeeResponse": {
            "type": "object",
            "properties": {
                "department_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "employee_code": {
                    "type": "string"
                },
                "employee_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position_id": {
                    "type": "integer"
                },
                "superior": {
                    "type": "integer"
                }
            }
        },
        "handler.LocationResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "location_id": {
                    "type": "integer"
                },
                "location_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "required": [
                "employee_name",
                "password"
            ],
            "properties": {
                "employee_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                }
            }
        },
        "handler.PositionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "department_id": {
                    "type": "integer"
                },
                "position_id": {
                    "type": "integer"
                },
                "position_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "handler.RegisterRequest": {
            "type": "object",
            "required": [
                "created_by",
                "department_id",
                "employee_name",
                "password",
                "position_id",
                "superior"
            ],
            "properties": {
                "created_by": {
                    "type": "string",
                    "example": "admin"
                },
                "department_id": {
                    "type": "integer",
                    "example": 1
                },
                "employee_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                },
                "position_id": {
                    "type": "integer",
                    "example": 1
                },
                "superior": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "handler.UpdateRequest": {
            "type": "object",
            "required": [
                "department_id",
                "employee_name",
                "password",
                "position_id",
                "superior",
                "updated_by"
            ],
            "properties": {
                "department_id": {
                    "type": "integer",
                    "example": 1
                },
                "employee_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                },
                "position_id": {
                    "type": "integer",
                    "example": 1
                },
                "superior": {
                    "type": "integer",
                    "example": 1
                },
                "updated_by": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "handler.authResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eGdh5kiOTyyaQ3_bNykYDeYHO21Jg2..."
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Error message 1",
                        " Error message 2"
                    ]
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "utils.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Success"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and the access token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}